{
    "abbrev": "",
    "description": [
        "If you want a label created for any section, subsection, chapter, etc. that you add, this script auto-generates a label after pressing <space> behind the structure command (e.g. chapter{Foo bar}<space>). The label is preceded by a corresponding prefix and the title is sanitized (e.g. chapter{Foo bar}label{ch:foo-bar}). TXS provides label generation through the right-click menu in the structure view, but this is IMHO quicker and provides different prefixes for different types of structures."
    ],
    "formatVersion": 1,
    "menu": "",
    "name": "Automatic label creation by pressing space after a structure command",
    "shortcut": "",
    "tag": [
        "%SCRIPT",
        "",
        "// all matches",
        "matches = triggerMatches;",
        "",
        "// the structure title",
        "let title = matches[2];",
        "",
        "// sanitize title",
        "title = title.toLowerCase();",
        "title = title.replace(/[äàáâã]/gi, \"a\");",
        "title = title.replace(/[ëèéêẽ]/gi, \"e\");",
        "title = title.replace(/[ïìíîĩ]/gi, \"i\");",
        "title = title.replace(/[öòóôõ]/gi, \"o\");",
        "title = title.replace(/[üùúûũ]/gi, \"u\");",
        "title = title.replace(/[ç]/gi, \"c\");",
        "",
        "// split in words",
        "let titleWordsArray = title.match(/\\w+/g);",
        "",
        "// shorten to n words",
        "const n = 3;",
        "titleWordsArray = titleWordsArray.slice(0, n + 1);",
        "",
        "// join words together",
        "title = titleWordsArray.join(\"-\");",
        "",
        "// get long type",
        "let type = matches[1];",
        "",
        "const prefixes = {",
        "  subsubsection: \"sec\",",
        "  subsection: \"sec\",",
        "  section: \"sec\",",
        "  chapter: \"ch\",",
        "  part: \"part\",",
        "  paragraph: \"pg\",",
        "  subparagraph: \"pg\",",
        "};",
        "// replace type by short type",
        "if (type in prefixes) {",
        "  type = prefixes[type];",
        "}",
        "// output",
        "editor.write(matches[0] + \"\\\\label{\" + type + \":\" + title + \"}\");"
    ],
    "trigger": "\\\\((?:sub){0,2}(?:section|chapter|part|paragraph))\\{([^}]+)\\}[ ]"
}
